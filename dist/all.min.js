"use strict";var blogApp=angular.module("blogApp",["ui.router"]);blogApp.config(function(t,e){e.otherwise("/"),t.state("blog",{url:"/blog",templateUrl:"templates/blog.html"}).state("blog.login",{url:"/login",controller:"loginCtrl",templateUrl:"templates/partials/blog/login.html"}).state("blog.welcome",{url:"/welcome",controller:"blogListCtrl",templateUrl:"templates/partials/blog/welcome.html"}).state("blog.login.multiple",{url:"/todolist",views:{todolist:{controller:"gtdCtrl",templateUrl:"templates/todolist.html"}}}),t.state("todolist",{url:"/todolist",controller:"gtdCtrl",templateUrl:"templates/todolist.html"}),t.state("exercise",{url:"/exercise",templateUrl:"templates/exercise.html"})}),blogApp.controller("loginCtrl",["$scope","loginManage",function(t,e){t.username="admin",t.password="admin",t.verify=function(){t.user===t.username&&t.password===t.code?e.login():(t.user="",t.code="",alert("Please try again."))}}]),blogApp.controller("blogListCtrl",["$scope","$http","loginManage",function(t,e,o){t.logout=function(){o.logout()},o.islogin?e.get("/assets/data/blogList.json").success(function(e){t.blogList=e}):t.logout()}]),blogApp.controller("gtdCtrl",["$scope","taskStorageService",function(t,e){t.taskList=e.getTasks(),t.add=function(){t.taskList.push({description:t.newTask,status:"new"}),t.newTask="",e.setTasks(t.taskList)},t.delete=function(o){t.taskList.splice(o,1),e.setTasks(t.taskList)},t.check=function(o){t.taskList[o].status="completed",e.setTasks(t.taskList)}}]),blogApp.directive("draggableVertical",function(){var t;return t=function(t,e){$(e).draggable({axis:"y",containment:".left-side",scroll:!1})},{restrict:"ACE",link:t}}),blogApp.directive("draggableHorizon",function(){var t;return t=function(t,e){$(e).draggable({axis:"x",containment:".right-side",scroll:!1})},{restrict:"ACE",link:t}}),blogApp.directive("sortableList",function(){var t;return t=function(t,e){$(e).sortable()},{restrict:"ACE",link:t}}),Storage.prototype.setArray=function(t,e){return this.setItem(t,JSON.stringify(e))},Storage.prototype.getArray=function(t){return JSON.parse(this.getItem(t))},blogApp.service("taskStorageService",[function(){this.getTasks=function(){return localStorage.getArray("tasks")||new Array},this.setTasks=function(t){localStorage.setArray("tasks",t)}}]),blogApp.service("loginManage",["$location",function(t){this.islogin=!1,this.login=function(){this.islogin=!0,t.path("/blog/welcome")},this.logout=function(){this.islogin=!1,t.path("/blog/login")}}]);